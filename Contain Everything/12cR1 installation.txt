Fourth, login as root and open the term to run the following commands to prepare for the installation:

yum install oracle-rdbms-server-12cR1-preinstall -y
yum update -y

I found the above preparation was insufficient. So I added the following steps:

open the file /etc/sysctl.conf to ensure the following variables:
fs.file-max = 6815744
kernel.sem = 250 32000 100 128
kernel.shmmni = 4096
kernel.shmall = 1073741824
kernel.shmmax = 4398046511104
net.core.rmem_default = 262144
net.core.rmem_max = 4194304
net.core.wmem_default = 262144
net.core.wmem_max = 1048576
fs.aio-max-nr = 1048576
net.ipv4.ip_local_port_range = 9000 65500
run the command
/sbin/sysctl -p
open the file /etc/security/limits.conf and ensure the following lines
oracle   soft   nofile    1024
oracle   hard   nofile    65536
oracle   soft   nproc    2047
oracle   hard   nproc    16384
oracle   soft   stack    10240
oracle   hard   stack    32768
run the following commands
yum install binutils -y
yum install compat-libstdc++-33 -y
yum install compat-libstdc++-33.i686 -y
yum install gcc -y
yum install gcc-c++ -y
yum install glibc -y
yum install glibc.i686 -y
yum install glibc-devel -y
yum install glibc-devel.i686 -y
yum install ksh -y
yum install libgcc -y
yum install libgcc.i686 -y
yum install libstdc++ -y
yum install libstdc++.i686 -y
yum install libstdc++-devel -y
yum install libstdc++-devel.i686 -y
yum install libaio -y
yum install libaio.i686 -y
yum install libaio-devel -y
yum install libaio-devel.i686 -y
yum install libXext -y
yum install libXext.i686 -y
yum install libXtst -y
yum install libXtst.i686 -y
yum install libX11 -y
yum install libX11.i686 -y
yum install libXau -y
yum install libXau.i686 -y
yum install libxcb -y
yum install libxcb.i686 -y
yum install libXi -y
yum install libXi.i686 -y
yum install make -y
yum install sysstat -y
yum install unixODBC -y
yum install unixODBC-devel -y
yum install zlib-devel -y
groupadd -g 54321 oinstall
groupadd -g 54322 dba
groupadd -g 54323 oper
groupadd -g 54324 backupdba
groupadd -g 54325 dgdba
groupadd -g 54326 kmdba
groupadd -g 54327 asmdba
groupadd -g 54328 asmoper
groupadd -g 54329 asmadmin

useradd -u 54321 -g oinstall -G dba,oper oracle
Note that some of the above commands may be overlapping with

oracle-rdbms-server-12cR1-preinstall
but not all of them. So running the commands will ensure the completeness of the preparation.

set password for the installation user oracle by running the commands          
passwd oracle
open the file /etc/selinux/config to make sure the line 
SELINUX=permissive
Run the following command.

    setenforce Permissive
 

Disable the firewall by issuing the following commands:

    service iptables stop
    chkconfig iptables off
 

Create the directories in which the Oracle software will be installed by the following commands:

    mkdir -p /u01/app/oracle/product/12.1.0.2/db_1
    chown -R oracle:oinstall /u01
    chmod -R 775 /u01
Give permission to connect to X server by the following command
         xhost +
Open the file /home/oracle/.bash_profile and add the following to the end of the file:
# Oracle Settings
export TMP=/tmp
export TMPDIR=$TMP

export ORACLE_HOSTNAME=ol7.mydomain.com
export ORACLE_UNQNAME=PROD.mydomain.com
export ORACLE_BASE=/u01/app/oracle
export ORACLE_HOME=$ORACLE_BASE/product/12.1.0.2/db_1
export ORACLE_SID=PROD

export PATH=/usr/sbin:$PATH
export PATH=$ORACLE_HOME/bin:$PATH

export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib
export CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib
Note that, the /etc/environment is a plain text file and not a shell script, $ORACLE_HOME will not be recognized. So use .bash or .bash_profile to enter the above variables. 

Also note that the variable for LD_LIBRARY_PATH may cause your graphical user programs such as firewall-config and gnome-tweak-tool not working. To fix it, you may need to change the line to the following after the installation:

export LD_LIBRARY_PATH=.lib64:/lib:/usr/lib: $ORACLE_HOME/lib
Fifth, login as installation user oracle and open the term to run the commands:

    cd /tmp/database
    ./runInstaller
Now the installation process is mostly smooth except for the following kinks:

When clicking "Next" on the "Download Software Updates" screen you will get the following message. Click the "Yes" button.
"[INS-13001] Environment does not meet minimum requirements.
Are you sure you want to continue?
During the linking phase, you will see the following error. Make sure you do not close the button. Instead, open the terminal and fix env_dbms.mk file as suggested below:

Error in invoking target 'links proc gen_pcscfg procob' of makefile
'/u01/app/oracle/product/12.1.0.1/db_1/precomp/lib/ins_precomp.mk'.
See
'/u01/app/oraInventory/logs/installActions2014-04-26_08-07-04PM.log'
for details.
To fix it, do the following:

rm -rf $ORACLE_HOME/lib/stubs/*
cp $ORACLE_HOME/rdbms/lib/env_rdbms.mk $ORACLE_HOME/rdbms/lib/env_rdbms.mk.orig
Perform the following modifications to the "$ORACLE_HOME/rdbms/lib/env_rdbms.mk" file.

# Line 176
# FROM:
LINKTTLIBS=$(LLIBCLNTSH) $(ORACLETTLIBS) $(LINKLDLIBS)
# TO  :
LINKTTLIBS=$(LLIBCLNTSH) $(ORACLETTLIBS) $(LINKLDLIBS) -lons

# Line 279-280
# FROM:
LINK=$(FORT_CMD) $(PURECMDS) $(ORALD) $(LDFLAGS) $(COMPSOBJS)
LINK32=$(FORT_CMD) $(PURECMDS) $(ORALD) $(LDFLAGS32) $(COMPSOBJS)
# TO  :
LINK=$(FORT_CMD) $(PURECMDS) $(ORALD) $(LDFLAGS) $(COMPSOBJS) -Wl,--no-as-needed
LINK32=$(FORT_CMD) $(PURECMDS) $(ORALD) $(LDFLAGS32) $(COMPSOBJS) -Wl,--no-as-needed

# Line 3041-3042
# FROM:
TG4PWD_LINKLINE= $(LINK) $(OPT) $(TG4PWDMAI) \
        $(LLIBTHREAD) $(LLIBCLNTSH) $(LINKLDLIBS)
# TO  :
TG4PWD_LINKLINE= $(LINK) $(OPT) $(TG4PWDMAI) \
        $(LLIBTHREAD) $(LLIBCLNTSH) $(LINKLDLIBS) -lnnz12
Then go back to the error message window and click the "Retry" button.

Later, you might see the following error. Don't close the error prompt! Fix the file env_ctx.mk file first and then retry.

Error in invoking target 'install' of makefile 
'/u01/app/oracle/product/12.1.0.1/db_1/ctx/lib/ins_ctx.mk'.
See
'/u01/app/oraInventory/logs/installActions2014-04-26_08-07-04PM.log'
for details.
To fix it, do the following:

rm -rf $ORACLE_HOME/lib/stubs/*
cp $ORACLE_HOME/ctx/lib/env_ctx.mk $ORACLE_HOME/ctx/lib/env_ctx.mk.orig
Perform the following modifications to the "$ORACLE_HOME/ctx/lib/env_ctx.mk" file.

# Line 154
# FROM:
LINK=$(LDCCOM)
# TO  :
LINK=$(LDCCOM) --Wl,--no-as-needed
Go back the error message prompt and click the "Retry" button.

Toward the end when it is time to create a new database instance, you may also get errors on running dbca (Database Confirmation Assistant) and netca (Oracle Net Configuration Assistant) commands. The errors are probably related to your preparation steps. Check your /etc/hosts records for errors and retry the creation again. 
Finally, due to the issues during the linking phase, it probably makes sense to do a relink once the installation is complete.

dbshut $ORACLE_HOME
cd $ORACLE_HOME/bin
./relink all
# Following line should return no errors.
grep -i err $ORACLE_HOME/install/relink.log
dbstart $ORACLE_HOME
Edit the "/etc/oratab" file setting the restart flag for each instance to 'Y'.

prod:/u01/app/oracle/product/12.1.0.2/db_1:Y
 Edit the file listener.ora inside $ORACLE_HOME/network/admin folder as follows:

LISTENER =

  (DESCRIPTION_LIST =

    (DESCRIPTION =

      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))

      (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.0.13)(PORT = 1521))

    )

  )

 

SID_LIST_LISTENER=

  (SID_LIST=

    (SID_DESC=

      (GLOBAL_DBNAME=prod.mydomain.com)

      (ORACLE_HOME=/u01/app/oracle/product/12.1.0.2/db_1)

      (SID_NAME=prod))

    (SID_DESC=

      (SID_NAME=prod)

      (ORACLE_HOME=/u01/app/oracle/product/12.1.0.2/db_1)

      (PROGRAM=extproc)))

You may need to restart the listener to activate the above file by the commands:

lsnrctl start
lsnrctl status

The following commands are used to start and stop database instances in installation account oracle:

dbstart $ORACLE_HOME
dbshut $ORACLE_HOME
Create Database Services that START/STOP Automatically

In order for listener and database instance to start and stop automatically when the system boots/shuts down, we will have to create a service. 

First we must create the "startup.sh" and "shutdown.sh" scripts in the "/home/oracle/scripts" Create the directory if it does not exist yet. 
# mkdir -p /home/oracle/scripts
# chown oracle:oinstall /home/oracle/scripts
The "/home/oracle/scripts/startup.sh" script should contain the following commands.

#!/bin/bash

export TMP=/tmp
export TMPDIR=$TMP
export PATH=/usr/sbin:/usr/local/bin:$PATH
export ORACLE_HOSTNAME=192.168.0.13
export ORACLE_UNQNAME=prod

export ORACLE_SID=prod
ORAENV_ASK=NO
. oraenv
ORAENV_ASK=YES

# Start Listener
lsnrctl start

# Start Database
sqlplus / as sysdba << EOF
STARTUP;
EXIT;
EOF
The "/home/oracle/scripts/shutdown.sh" script is similar.

#!/bin/bash

export TMP=/tmp
export TMPDIR=$TMP
export PATH=/usr/sbin:/usr/local/bin:$PATH
export ORACLE_HOSTNAME=192.168.0.13
export ORACLE_UNQNAME=prod

export ORACLE_SID=prod
ORAENV_ASK=NO
. oraenv
ORAENV_ASK=YES

# Stop Database
sqlplus / as sysdba << EOF
SHUTDOWN IMMEDIATE;
EXIT;
EOF

# Stop Listener
lsnrctl stop
Make sure the permissions and ownership of the files is correct.

# chmod u+x /home/oracle/scripts/startup.sh /home/oracle/scripts/shutdown.sh
# chown oracle.oinstall /home/oracle/scripts/startup.sh /home/oracle/scripts/shutdown.sh
Create the service file called "/lib/systemd/system/dbora.service".

[Unit]
Description=The Oracle Database Service
After=syslog.target network.target

[Service]
Type=simple
RemainAfterExit=yes
User=oracle
Group=oinstall
ExecStart=/home/oracle/scripts/startup.sh >> /home/oracle/scripts/startup_shutdown.log 2>&1 &
ExecStop=/home/oracle/scripts/shutdown.sh >> /home/oracle/scripts/startup_shutdown.log 2>&1

[Install]
WantedBy=multi-user.target
Create a symbolic link to the "/etc/systemd/system/" directory.

# ln -s /lib/systemd/system/dbora.service /etc/systemd/system/dbora.service
Reload systemd so it can see the new service.

# systemctl daemon-reload
Start the service and enable so it is automatically restarted on reboot.

# systemctl start dbora.service
# systemctl enable dbora.service
ln -s '/usr/lib/systemd/system/dbora.service' '/etc/systemd/system/multi-user.target.wants/dbora.service'
# systemctl status dbora.service