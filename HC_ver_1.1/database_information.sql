SET MARKUP HTML ON SPOOL ON PREFORMAT OFF ENTMAP ON -
HEAD "<TITLE>DATABASE INFORMATION</TITLE> -
<STYLE TYPE='TEXT/CSS'> -
<!-- BODY {BACKGROUND: #FFFFE6} --> -
</STYLE>" -
BODY "TEXT='#FF0000'" -
TABLE "WIDTH='90%' BORDER='1'"
SET ECHO OFF
SET VERIFY OFF
SET TRIMSPOOL ON
SET TRIMOUT ON
SET LINESIZE 9999
SET PAGESIZE 9999
SET FEEDBACK OFF
SET TIMING OFF
SET TIME OFF
--Format Column
COLUMN DBSIZE HEADING 'DATABASE SIZE (GB)'
COLUMN CTIME HEADING 'DATE'
COLUMN DATABASE_ROLE HEADING "DATABASE ROLE"
COLUMN START_TIME HEADING 'START TIME'
COLUMN END_TIME HEADING 'END TIME'
COLUMN USED_PERCENT HEADING '% USED'
COLUMN CF FORMAT 9,999
COLUMN DF FORMAT 9,999
COLUMN I0 FORMAT 9,999
COLUMN I1 FORMAT 9,999
COLUMN L FORMAT 9,999
COLUMN OUTPUT_GB FORMAT 9,999,999 HEADING "OUTPUT|GB"
COLUMN STATUS FORMAT A10 TRUNC
COLUMN FLASHBACK_ON HEADING 'FLASHBACK'
COLUMN ARCHIVELOG FORMAT A20 HEADING 'ARCHIVELOG'
COLUMN START_TIME FORMAT A30
COLUMN END_TIME FORMAT A30
COLUMN DOW FORMAT A10
COLUMN CF FOR 9,999
COLUMN DF FOR 9,999
COLUMN ELAPSED_SECONDS HEADING "ELAPSED|SECONDS"
COLUMN I0 FOR 9,999
COLUMN I1 FOR 9,999
COLUMN L FOR 9,999
COLUMN OUTPUT_GBYTES FOR 9,999,999 HEADING "OUTPUT|GBYTES"
COLUMN INPUT_GBYTES FOR 9,999,999 HEADING "INPUT|GBYTES"
COLUMN SESSION_RECID FOR 999999 HEADING "SESSION|RECID"
COLUMN SESSION_STAMP FOR 99999999999 HEADING "SESSION|STAMP"
COLUMN STATUS FOR A10 TRUNC
COLUMN TIME_TAKEN FOR A10 HEADING "TIME|TAKEN"
COLUMN DEVICE_TYPE FOR A10 HEADING "DEVICE|TYPE"
COLUMN OUTPUT_INSTANCE FOR 9999 HEADING "OUT|INST"
COLUMN USAGE FORMAT 999,990 HEADING "USAGE (%)"
COLUMN SIZEMB FORMAT 999,999,990 HEADING "SIZE (MB)"
COLUMN FREEMB FORMAT 999,999,990 HEADING "FREE (MB)"
COLUMN USEDMB FORMAT 999,999,990 HEADING "USED (MB)"
COLUMN MAX FORMAT 999,999,990 HEADING "MAX (MB)"
COLUMN USED_PCT_OF_MAX FORMAT 990 HEADING "USED PCT OF MAX (%)"
COLUMN TABLESPACE_NAME FORMAT A30 HEADING "TABLESPACE NAME"
COLUMN SEGMENT_OWNER FORMAT A30 HEADING "SEGMENT OWNER"
COLUMN SEGMENT_NAME FORMAT A30 HEADING "SEGMENT NAME"
COLUMN PARTITION_NAME FORMAT A30 HEADING "PARTITION NAME"
COLUMN ALLOCATED_SPACE FORMAT 9999999999 HEADING "ALLOCATED SPACE (MB)"
COLUMN USED_SPACE FORMAT 9999999999 HEADING "USED SPACE (MB)"
COLUMN RECLAIMABLE_SPACE FORMAT 9999999999 HEADING "RECLAIMABLE SPACE (MB)"
COLUMN OWNER FORMAT A30
COLUMN SEGMENT_NAME FORMAT A40
COLUMN BYTES FORMAT A20
COLUMN INDEX_NAME FORMAT A30 HEADING "INDEX NAME"
COLUMN TABLE_NAME FORMAT A30 HEADING "TABLE NAME"
COLUMN OBJECT_TYPE FORMAT A30 HEADING "OBJECT TYPE"
COLUMN LAST_ANALYZED FORMAT A30 HEADING "LAST ANALYZED"
SPOOL ./database_information.html
--Database Information
PROMPT + DATABASE_INFORMATION
SELECT (
    SELECT ROUND (SUM (BYTES) / 1024 / 1024 / 1024,2)
    FROM V$DATAFILE_HEADER) DBSIZE,DATABASE_ROLE,(
            CASE LOG_MODE
                WHEN 'ARCHIVELOG' THEN
                    'YES'
                ELSE
                    'NO'
            END) ARCHIVELOG,FLASHBACK_ON,NVL ( (
            SELECT 'YES'
            FROM V$ASM_DISKGROUP
            WHERE ROWNUM <= 1
        ),'NO') ASM,(
            SELECT COUNT (*)
            FROM GV$INSTANCE
        ) NODES
    FROM V$DATABASE;
--Instance State
PROMPT + INSTANCE_STATE
SELECT A.NAME "DATABASE NAME",B.INSTANCE_NAME "INSTANCE NAME",A.DB_UNIQUE_NAME "DB UNIQUE NAME",A.DATABASE_ROLE "DATABASE ROLE",A.OPEN_MODE "OPEN MODE"
FROM GV$DATABASE A,GV$INSTANCE B
WHERE A.INST_ID=B.INST_ID;
--ASM
PROMPT + ASM
SELECT NAME "DISKGROUP",ROUND((TOTAL_MB-FREE_MB)/TOTAL_MB*100) "USAGE (%)"
FROM V$ASM_DISKGROUP UNION ALL
    SELECT 'NULL',0
    FROM DUAL
    ORDER BY "USAGE (%)" DESC NULLS LAST;
--Check Tablespace
PROMPT + TABLESPACE
SELECT A.TABLESPACE_NAME,ROUND (100 * (A.BYTES_ALLOC - NVL (B.BYTES_FREE,0)) / A.BYTES_ALLOC,0) USAGE,ROUND (A.BYTES_ALLOC / 1024 / 1024) SIZEMB,ROUND (NVL (B.BYTES_FREE,0) / 1024 / 1024) FREEMB,ROUND ( (A.BYTES_ALLOC - NVL (B.BYTES_FREE,0)) / 1024 / 1024) USEDMB,ROUND (MAXBYTES / 1048576) MAX,ROUND (100 * (A.BYTES_ALLOC - NVL (B.BYTES_FREE,0)) / A.MAXBYTES,0) USED_PCT_OF_MAX
FROM (
        SELECT F.TABLESPACE_NAME,SUM (F.BYTES) BYTES_ALLOC,SUM ( DECODE (F.AUTOEXTENSIBLE,'YES',F.MAXBYTES,'NO',F.BYTES)) MAXBYTES
        FROM DBA_DATA_FILES F
        GROUP BY TABLESPACE_NAME
    )                        A,(
        SELECT F.TABLESPACE_NAME,SUM (F.BYTES) BYTES_FREE
        FROM DBA_FREE_SPACE F
        GROUP BY TABLESPACE_NAME
    )                        B
WHERE A.TABLESPACE_NAME = B.TABLESPACE_NAME(+) UNION ALL
    SELECT H.TABLESPACE_NAME,ROUND ( SUM (NVL (P.BYTES_USED,0)) / SUM (H.BYTES_FREE + H.BYTES_USED),0) USAGE,ROUND (SUM (H.BYTES_FREE + H.BYTES_USED) / 1048576) MEGS_ALLOC,ROUND ( SUM ( (H.BYTES_FREE + H.BYTES_USED) - NVL (P.BYTES_USED,0)) / 1048576) MEGS_FREE,ROUND (SUM (NVL (P.BYTES_USED,0)) / 1048576) MEGS_USED,ROUND ( SUM (DECODE (F.AUTOEXTENSIBLE,'YES',F.MAXBYTES,F.BYTES)) / 1048576,0) MAX,ROUND ( 100 * SUM (NVL (P.BYTES_USED,0)) / SUM (DECODE (F.AUTOEXTENSIBLE,'YES',F.MAXBYTES,F.BYTES)),0) USED_PCT_OF_MAX
    FROM SYS.V_$TEMP_SPACE_HEADER H,SYS.V_$TEMP_EXTENT_POOL P,DBA_TEMP_FILES F
    WHERE P.FILE_ID(+) = H.FILE_ID AND P.TABLESPACE_NAME(+) = H.TABLESPACE_NAME AND F.FILE_ID = H.FILE_ID AND F.TABLESPACE_NAME = H.TABLESPACE_NAME
    GROUP BY H.TABLESPACE_NAME
    ORDER BY USED_PCT_OF_MAX DESC;
--Table Fragment
PROMPT + TABLE_FRAGMENT
SELECT /*+  NO_MERGE  */ /* 2B.57 */ SEGMENT_OWNER,SEGMENT_NAME,(ALLOCATED_SPACE/1024/1024) ALLOCATED_SPACE,(USED_SPACE/1024/1024) USED_SPACE,(RECLAIMABLE_SPACE/1024/1024) RECLAIMABLE_SPACE
FROM TABLE(DBMS_SPACE.ASA_RECOMMENDATIONS())
WHERE SEGMENT_OWNER NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_SSO','APPQOSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','ORDSYS','OUTLN','OWBSYS') AND SEGMENT_OWNER NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS') AND SEGMENT_TYPE LIKE 'TABLE' UNION ALL
    SELECT 'NULL','NULL',0,0,0
    FROM DUAL
    ORDER BY RECLAIMABLE_SPACE DESC NULLS LAST;
--Index Fragment
PROMPT + INDEX_FRAGMENT
SELECT /*+  NO_MERGE  */ /* 2B.57 */ SEGMENT_OWNER,SEGMENT_NAME,(ALLOCATED_SPACE/1024/1024) ALLOCATED_SPACE,(USED_SPACE/1024/1024) USED_SPACE,(RECLAIMABLE_SPACE/1024/1024) RECLAIMABLE_SPACE
FROM TABLE(DBMS_SPACE.ASA_RECOMMENDATIONS())
WHERE SEGMENT_OWNER NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_SSO','APPQOSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','ORDSYS','OUTLN','OWBSYS') AND SEGMENT_OWNER NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS') AND SEGMENT_TYPE LIKE 'INDEX' UNION ALL
    SELECT 'NULL','NULL',0,0,0
    FROM DUAL
    ORDER BY RECLAIMABLE_SPACE DESC NULLS LAST;
--Table Partition Fragment
PROMPT + TABLE_PARTITION_FRAGMENT
SELECT /*+  NO_MERGE  */ /* 2B.57 */ SEGMENT_OWNER,SEGMENT_NAME,PARTITION_NAME,(ALLOCATED_SPACE/1024/1024) ALLOCATED_SPACE,(USED_SPACE/1024/1024) USED_SPACE,(RECLAIMABLE_SPACE/1024/1024) RECLAIMABLE_SPACE
FROM TABLE(DBMS_SPACE.ASA_RECOMMENDATIONS())
WHERE SEGMENT_OWNER NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_SSO','APPQOSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','ORDSYS','OUTLN','OWBSYS') AND SEGMENT_OWNER NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS') AND SEGMENT_TYPE LIKE 'TABLE PARTITION' UNION ALL
    SELECT 'NULL','NULL','NULL',0,0,0
    FROM DUAL
    ORDER BY RECLAIMABLE_SPACE DESC NULLS LAST;
--Index Partition Fragment
PROMPT + INDEX_PARTITION_FRAGMENT
SELECT /*+  NO_MERGE  */ /* 2B.57 */ SEGMENT_OWNER,SEGMENT_NAME,PARTITION_NAME,(ALLOCATED_SPACE/1024/1024) ALLOCATED_SPACE,(USED_SPACE/1024/1024) USED_SPACE,(RECLAIMABLE_SPACE/1024/1024) RECLAIMABLE_SPACE
FROM TABLE(DBMS_SPACE.ASA_RECOMMENDATIONS())
WHERE SEGMENT_OWNER NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_SSO','APPQOSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','ORDSYS','OUTLN','OWBSYS') AND SEGMENT_OWNER NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS') AND SEGMENT_TYPE LIKE 'INDEX PARTITION' UNION ALL
    SELECT 'NULL','NULL','NULL',0,0,0
    FROM DUAL
    ORDER BY RECLAIMABLE_SPACE DESC NULLS LAST;
--Invalid Object
PROMPT + INVALID_OBJECT
SELECT OWNER,COUNT(*) COUNT,OBJECT_TYPE
FROM DBA_OBJECTS
WHERE STATUS='INVALID'
GROUP BY OWNER,OBJECT_TYPE UNION ALL
    SELECT 'NULL',0,'NULL'
    FROM DUAL
    ORDER BY COUNT DESC NULLS LAST;
--Tables Statistics
PROMPT + TABLE_STATISTICS
SELECT OWNER,TABLE_NAME,"DATE"
FROM (
        SELECT OWNER,TABLE_NAME,NVL(TO_CHAR(LAST_ANALYZED,'DD-MON-YYYY'),'NEVER ANALYZE') "DATE",LAST_ANALYZED
        FROM DBA_TABLES
        WHERE (LAST_ANALYZED IS NULL OR LAST_ANALYZED < (SYSDATE - 60)) AND OWNER IN (
                SELECT USERNAME
                FROM DBA_USERS
                WHERE ACCOUNT_STATUS='OPEN' AND TRUNC(CREATED) > (
                        SELECT TRUNC(CREATED)
                        FROM DBA_USERS
                        WHERE USERNAME='SYS'
                    )
            )
        ORDER BY LAST_ANALYZED DESC
    )
WHERE ROWNUM <= 30 AND "DATE" NOT IN ('NEVER ANALYZE') UNION ALL
    SELECT 'NULL','NULL','01-JAN-2000'
    FROM DUAL;
--Index Statistics
PROMPT + INDEX_STATISTICS
SELECT OWNER,TABLE_NAME,INDEX_NAME,"DATE"
FROM (
        SELECT OWNER,TABLE_NAME,INDEX_NAME,NVL(TO_CHAR(LAST_ANALYZED,'DD-MON-YYYY'),'NEVER ANALYZE') "DATE",LAST_ANALYZED
        FROM DBA_INDEXES
        WHERE (LAST_ANALYZED IS NULL OR LAST_ANALYZED < (SYSDATE - 60)) AND OWNER IN (
                SELECT USERNAME
                FROM DBA_USERS
                WHERE ACCOUNT_STATUS='OPEN' AND TRUNC(CREATED) > (
                        SELECT TRUNC(CREATED)
                        FROM DBA_USERS
                        WHERE USERNAME='SYS'
                    )
            )
        ORDER BY LAST_ANALYZED DESC
    )
WHERE ROWNUM <= 30 AND "DATE" NOT IN ('NEVER ANALYZE') UNION ALL
    SELECT 'NULL','NULL','NULL','01-JAN-2000'
    FROM DUAL;
--Check Backup
PROMPT + CHECK_BACKUP
ALTER SESSION SET NLS_DATE_FORMAT="DD/MM/YYYY HH24:MI";
SELECT J.START_TIME "START_TIME", J.END_TIME "END_TIME",J.TIME_TAKEN_DISPLAY TIME_TAKEN,OUTPUT_DEVICE_TYPE DEVICE_TYPE,(J.INPUT_BYTES/1024/1024/1024) INPUT_GBYTES,(J.OUTPUT_BYTES/1024/1024/1024) OUTPUT_GBYTES,J.STATUS,DECODE(TO_CHAR(J.START_TIME,'D'),1,'SUNDAY',2,'MONDAY',3,'TUESDAY',4,'WEDNESDAY',5,'THURSDAY',6,'FRIDAY',7,'SATURDAY') DOW
FROM V$RMAN_BACKUP_JOB_DETAILS J
    LEFT OUTER JOIN (
        SELECT D.SESSION_RECID,D.SESSION_STAMP,SUM(CASE
                WHEN D.CONTROLFILE_INCLUDED = 'YES' THEN
                    D.PIECES
                ELSE
                    0
            END) CF,SUM(CASE
                WHEN D.CONTROLFILE_INCLUDED = 'NO' AND D.BACKUP_TYPE ||D.INCREMENTAL_LEVEL = 'D' THEN
                    D.PIECES
                ELSE
                    0
            END) DF,SUM(CASE
                WHEN D.BACKUP_TYPE ||D.INCREMENTAL_LEVEL = 'D0' THEN
                    D.PIECES
                ELSE
                    0
            END) I0,SUM(CASE
                WHEN D.BACKUP_TYPE ||D.INCREMENTAL_LEVEL = 'I1' THEN
                    D.PIECES
                ELSE
                    0
            END) I1,SUM(CASE
                WHEN D.BACKUP_TYPE = 'L' THEN
                    D.PIECES
                ELSE
                    0
            END) L
        FROM V$BACKUP_SET_DETAILS D
            JOIN V$BACKUP_SET S ON S.SET_STAMP = D.SET_STAMP AND S.SET_COUNT = D.SET_COUNT
        WHERE S.INPUT_FILE_SCAN_ONLY = 'NO'
        GROUP BY D.SESSION_RECID,D.SESSION_STAMP
    ) X ON X.SESSION_RECID = J.SESSION_RECID AND X.SESSION_STAMP = J.SESSION_STAMP
    LEFT OUTER JOIN (
        SELECT O.SESSION_RECID,O.SESSION_STAMP,MIN(INST_ID) INST_ID
        FROM GV$RMAN_OUTPUT O
        GROUP BY O.SESSION_RECID,O.SESSION_STAMP
    ) RO ON RO.SESSION_RECID = J.SESSION_RECID AND RO.SESSION_STAMP = J.SESSION_STAMP
WHERE J.START_TIME > TRUNC(SYSDATE)-30 UNION ALL
    SELECT TO_DATE('01/01/2000 01:00'),TO_DATE('01/01/2000 01:30'),'00:30:00','NULL',0,0,'NULL','NULL'
    FROM DUAL
    ORDER BY "START_TIME" DESC NULLS LAST;
--DBA Role
PROMPT + DBA_ROLE
SELECT GRANTEE "USERS",GRANTED_ROLE "GRANTED ROLE"
FROM DBA_ROLE_PRIVS
WHERE GRANTED_ROLE = 'DBA' AND GRANTEE NOT LIKE 'SYS' AND GRANTEE NOT LIKE 'SYSTEM' UNION ALL
    SELECT 'NULL','NULL'
    FROM DUAL;
--Objects in System/Sysaux Tablespace
PROMPT + OBJECT_IN_SYSTEM/SYSAUX
SELECT OWNER "USER",SEGMENT_NAME "SEGMENT NAME",SEGMENT_TYPE "TYPE",BYTES/1024/1024 "SIZE_MB"
FROM DBA_SEGMENTS
WHERE TABLESPACE_NAME IN ('SYSTEM','SYSAUX') AND OWNER IN (
        SELECT USERNAME
        FROM DBA_USERS
        WHERE ACCOUNT_STATUS='OPEN' AND TRUNC(CREATED) > (
                SELECT TRUNC(CREATED)
                FROM DBA_USERS
                WHERE USERNAME='SYS'
            )
    ) AND OWNER NOT IN ('SYSMAN','ANONYMOUS','APEX_050100','APEX_PUBLIC_USER','APPQOSSYS','AUDSYS','CTXSYS','DBSFWUSER','DBSNMP','DIP','DVSYS','DVF','FLOWS_FILES','GGSYS','GSMADMIN_INTERNAL','GSMCATUSER','GSMUSER','LBACSYS','MDDATA','MDSYS','OUTLN','ORACLE_OCM','REMOTE_SCHEDULER_AGENT','SYSBACKUP','SYS$UMF','XDB','WMSYS','XS$NULL') UNION ALL
    SELECT 'NULL','NULL','NULL',0
    FROM DUAL
    ORDER BY 4 DESC NULLS LAST;
SPOOL OFF
EXIT